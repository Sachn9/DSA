import java.util.*;

class Solution {
    public int[] countDistinct(int[] arr, int k) {
        //Write code here
        int n = arr.length;
        int[] ans = new int[n - k + 1];  // Total sliding windows = n - k + 1
        HashMap<Integer, Integer> freqMap = new HashMap<>();

        for (int i = 0; i < k; i++) {
            freqMap.put(arr[i], freqMap.getOrDefault(arr[i], 0) + 1);
        }
        ans[0] = freqMap.size();

        for (int i = k; i < n; i++) {
            int outElem = arr[i - k];
            freqMap.put(outElem, freqMap.get(outElem) - 1);
            if (freqMap.get(outElem) == 0) {
                freqMap.remove(outElem);
            }

            int inElem = arr[i];
            freqMap.put(inElem, freqMap.getOrDefault(inElem, 0) + 1);

            ans[i - k + 1] = freqMap.size();
        }

        return ans;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, k;
        n = sc.nextInt();
        k = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt();
        Solution Obj = new Solution();
        int result[] = Obj.countDistinct(arr, k);
        for (int i = 0; i < result.length; i++)
            System.out.print(result[i] + " ");
        System.out.println();
        sc.close();
    }
}
