/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null) {
           return head;
       }
        ListNode sp=head;
        ListNode fp=head;
        ListNode prev=null;
        while( fp != null && fp.next != null){
            prev=sp;
            sp=sp.next;
            fp=fp.next.next;
        }
        prev.next = null;
        ListNode l1 = sortList(head);
        ListNode l2 = sortList(sp);
        return merge(l1,l2);
    }
    public static ListNode merge(ListNode l1, ListNode l2) {
        if(l1 == null) {
          return l2;
       }
       if(l2 == null) {
         return l1;
       }
        if(l1.val < l2.val) {
           l1.next = merge(l1.next, l2);
           return l1;
        } else {
           l2.next = merge(l1, l2.next);
           return l2;
       }
    }
}
