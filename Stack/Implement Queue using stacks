import java.io.*;
import java.util.*;

class StackQueue {
    Stack<Integer> s1 = new Stack<>();
    Stack<Integer> s2 = new Stack<>();

    // Function to push an element in queue by using 2 stacks.
    void Push(int x) {
        s1.push(x); // Always push to s1
    }

    // Function to pop an element from queue by using 2 stacks.
    int Pop() {
        if (s1.isEmpty() && s2.isEmpty()) {
            return -1; // Queue is empty
        }
        if (s2.isEmpty()) {
            // Transfer all from s1 to s2 to reverse order
            while (!s1.isEmpty()) {
                s2.push(s1.pop());
            }
        }
        return s2.pop();
    }
}

public class Main {
    public static void main(String args[]) throws IOException {
        Scanner sc = new Scanner(System.in);  
        StackQueue s = new StackQueue();	
        int q = sc.nextInt();
        ArrayList<Integer> ans = new ArrayList<>();
        while (q > 0) {
            int QueryType = sc.nextInt();
            if (QueryType == 1) {
                int a = sc.nextInt();
                s.Push(a);
            } else if (QueryType == 2) {
                ans.add(s.Pop());
            }
            q--;
        }	
        for (int x : ans) {
            System.out.print(x + " ");       
        }
        System.out.println();
    }
}
